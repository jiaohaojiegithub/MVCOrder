
@{
    ViewBag.Title = "OperatorInfo";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

@section Head{
    <link href="~/bootstrap-table-develop/docs/dist/bootstrap-table.css" rel="stylesheet" />
    <script src="~/bootstrap-table-develop/docs/dist/bootstrap-table.js"></script>
    <script src="~/bootstrap-table-develop/docs/dist/locale/bootstrap-table-zh-CN.js"></script>
}
<style>
    .table th, .table td {
        text-align: center;
        vertical-align: middle !important;
    }
</style>
<table id="table"></table>
@*@Html.ActionLink("编辑", "Edit", "_operator",new { id=1},new { @class= "btn btn-default" })*@
@section Scripts{
<script>
        $(document).ready(function () {

        });
        $(function () {
            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();
        });
        var TableInit = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#table').bootstrapTable({
                    url: '/_operator/operatorInfoAll',
                    method: 'get',                      //请求方式（*）
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: false,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    contentType: "application/x-www-form-urlencoded",
                    strictSearch: true,
                    showColumns: true,                  //是否显示所有的列
                    showRefresh: true,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 700,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "no",                     //每一行的唯一标识，一般为主键列
                    showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    columns: [
                        { field: 'op_code', title: '管理员编号' },
                        { field: 'op_name', title: '姓名' },
                        { field: 'op_pass', title: '密码' },
                        { field: 'op_cardno', title: '卡号' },
                        { field: 'remark', title: '备注' },
                        { field: 'creator', title: '创建人' },
                        { field: 'creatdt', title: '创建时间' },
                        { field: 'deptno', title: '部门编号' },
                        {
                            field: 'operate', title: '操作', formatter: operateFormatter //自定义方法，添加操作按钮
                        }
                    ],
                    rowStyle: function (row, index) {
                        var classesArr = ['success', 'info'];
                        var strclass = '';
                        if (index % 2 === 0) {//偶数行
                            strclass = classesArr[0];
                        } else {//奇数行
                            strclass = classesArr[1];
                        }
                        return { classes: strclass };
                    },//隔行变色
                });
            };
            //得到查询的参数
            oTableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    limit: params.limit,   //页面大小
                    offset: params.offset
                };
                return temp;
            };
            return oTableInit;
        };
        function operateFormatter(value, row, index) {//赋予的参数
            @*return ['@Html.ActionLink("编辑", "Edit", "_operator", new { id = 1 }, new { @class = "btn btn-default" })',
                //'<a class="btn active" href="#">' + value.op_code + '</a>',
                '<a class="btn btn-default" href="#">' + row.op_code + '</a>',
                '<a class="nav-item nav-link" href="#"><span class="fa fa-edit"></span></a>'
            ].join('');*@
            return [
                '<a class="btn btn-default" href="/_operator/Edit/' + row.op_code + '">编辑</a>|',
                '<a class="btn btn-default" href="/_operator/Edit/' + row.op_code+'">编辑</a>|',
                '@Html.ActionLink("编辑", "Edit", "_operator", new { id = 1 }, new { @class = "btn btn-default" })',

            ].join('');
        }
</script>
}
@*<div class="list-group list-group-item">
        <a class="item carousel-item-left">第一个</a>
        @Html.ActionLink("编辑", "Edit", "_operator", new { id = 1 }, new { @class = "item carousel-item-left" })
        <a class="item carousel-item-left"><span class="fa fa-edit">第二个</span></a>
    </div>
    <div class="list-group-item right">
        <div class="item">
            <span class="align-items-start fa fa-edit"></span>
            <a class="align-items-end">第一个</a>
        </div>
        <div class="item">
            <span class="align-items-start fa fa-edit"></span>
            <a class="align-items-end">第一个</a>
        </div>
        <div class="item">
            <span class="align-items-start fa fa-edit"></span>
            <a class="align-items-end">第一个</a>
        </div>
    </div>*@
@*@Html.ActionLink("编辑", "Edit", "_operator", new { id = 1 }, new { @class = "item carousel-item-left" })
@Html.ActionLink("<span class='fa fa - edit'>编辑</span>", "Edit", "_operator", new { id = 1 }, new { @class = "item carousel-item-left" })
@Html.ActionLink("编辑", "Edit", "_operator", new { id = 1 }, new { @class = "fa fa - edit" })
  <button class="btn btn-block" value="编辑">
      <span class="fa fa-edit">编辑</span>
  </button>*@